[versions]
desugar_jdk_libs = "2.1.5"
java = "17"
# AGP - Android API level mapping https://developer.android.com/build/releases/gradle-plugin#api-level-support
# AGP compatability https://developer.android.com/build/releases/gradle-plugin
agp = "8.9.0" # Android Gradle Plugin
kotlin = "2.1.10"
core-ktx = "1.15.0"
junit = "4.13.2"
android-lifecycle = "2.8.7"
activity-compose = "1.10.1"
kotlinxCollectionsImmutable = "0.3.8"
kotlinxDatetime = "0.6.2"
kotlinxIoCore = "0.7.0"
lifecycleViewmodelCompose = "2.8.4"
navigationCompose = "2.8.0-alpha13"
kotlinxSerializationJson = "1.8.0"
ksp = "2.1.10-1.0.31" # ksp to kotlin version mapping https://github.com/google/ksp/releases
compose-multiplatform = "1.7.3"
ktor = "3.1.1"
androidx-lifecycle = "2.8.4"
kotlinxCoroutines = "1.10.1"
buildkonfigGradlePlugin = "0.17.0"
kermit = "2.0.5"
sqlDelight = "2.0.2"
koin = "4.0.2"
firebaseGitLive = "2.1.0"

[libraries]
buildkonfig-gradle-plugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }

kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinxIoCore" }
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "android-lifecycle" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

log-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# DI
di-koinAndroid = {module = "io.insert-koin:koin-android", version.ref = "koin"}
di-koinComposeViewmodel = {module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin"}
di-koinComposeViewmodelNav = {module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin"}

#Network
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

#Test
test-composeUiTestManifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
test-composeUiTestJunit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
test-junit = { group = "junit", name = "junit", version.ref = "junit" }
test-kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
test-turbine = { group = "app.cash.turbine", name = "turbine", version = "1.2.0" }
test-kotlinxCoroutineTest = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version = "1.10.1" }

#BuildLogic
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
composeCompiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

#CodeStyle Use spotless plugin for multiplatform support

# Database
db-sqlAndroidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
db-sqlNativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
db-sqlRuntime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }

# Firebase
firebase-gitLiveCrashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebaseGitLive" }
firebase-gitLiveAnalytics = { module = "dev.gitlive:firebase-analytics", version.ref = "firebaseGitLive" }
firebase-gitLivePerformance = { module = "dev.gitlive:firebase-perf", version.ref = "firebaseGitLive" }
firebase-gitLiveRemoteConfig = { module = "dev.gitlive:firebase-config", version.ref = "firebaseGitLive" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfigGradlePlugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
google-services = { id = "com.google.gms.google-services", version = "4.4.2" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
firebase-crashlyticsPlugin = { id = "com.google.firebase.crashlytics", version = "3.0.3" }
firebase-performancePlugin = { id ="com.google.firebase.firebase-perf", version = "1.4.2" }
wire = { id = "com.squareup.wire", version = "5.3.1" }

#Convention Plugins
krail-android-application = { id = "krail.android.application", version = "unspecified" }
krail-compose-multiplatform = { id = "krail.compose.multiplatform", version = "unspecified" }
krail-android-library = { id = "krail.android.library", version = "unspecified" }
krail-kotlin-android = { id = "krail.kotlin.android", version = "unspecified" }
krail-kotlin-multiplatform = { id = "krail.kotlin.multiplatform", version = "unspecified" }
